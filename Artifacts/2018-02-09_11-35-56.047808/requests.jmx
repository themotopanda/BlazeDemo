<?xml version='1.0' encoding='UTF-8'?>
<jmeterTestPlan>
  <hashTree>
    <TestPlan enabled="true" guiclass="TestPlanGui" testclass="TestPlan" testname="BZT Generated Test Plan">
      <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="TestPlan.user_defined_variables" testclass="Arguments"/>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="BlazeDemo_confirmation">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp elementType="LoopController" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">-1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <stringProp name="ThreadGroup.start_time"></stringProp>
        <stringProp name="ThreadGroup.end_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
      </ThreadGroup>
      <hashTree type="tg">
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="Cache">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">true</boolProp>
        </CacheManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookies">
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">false</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Defaults">
          <boolProp name="HTTPSampler.image_parser">true</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <elementProp elementType="Arguments" guiclass="HTTPArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments" testname="user_defined"/>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV blazedemoports.csv">
          <stringProp name="filename">/Users/chefe02/Documents/Demo/blazedemo/blazedemoports.csv</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">fromPort,toPort</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="home">
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.domain">www.blazedemo.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="reserve">
          <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp elementType="HTTPArgument" name="toPort">
                <stringProp name="Argument.name">toPort</stringProp>
                <stringProp name="Argument.value">${toPort}</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="fromPort">
                <stringProp name="Argument.name">fromPort</stringProp>
                <stringProp name="Argument.value">${fromPort}</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.domain">www.blazedemo.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.path">/reserve.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="purchase">
          <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp elementType="HTTPArgument" name="toPort">
                <stringProp name="Argument.name">toPort</stringProp>
                <stringProp name="Argument.value">${toPort}</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="fromPort">
                <stringProp name="Argument.name">fromPort</stringProp>
                <stringProp name="Argument.value">${fromPort}</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="flight">
                <stringProp name="Argument.name">flight</stringProp>
                <stringProp name="Argument.value">12</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="airline">
                <stringProp name="Argument.name">airline</stringProp>
                <stringProp name="Argument.value">Virgin America</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.domain">www.blazedemo.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.path">/purchase.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="confirmation">
          <elementProp elementType="Arguments" guiclass="ArgumentsPanel" name="HTTPsampler.Arguments" testclass="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp elementType="HTTPArgument" name="creditCardYear">
                <stringProp name="Argument.name">creditCardYear</stringProp>
                <stringProp name="Argument.value">2018</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="city">
                <stringProp name="Argument.name">city</stringProp>
                <stringProp name="Argument.value">pirate cove</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="creditCardMonth">
                <stringProp name="Argument.name">creditCardMonth</stringProp>
                <stringProp name="Argument.value">11</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="inputName">
                <stringProp name="Argument.name">inputName</stringProp>
                <stringProp name="Argument.value">captain herp a derp</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="zipCode">
                <stringProp name="Argument.name">zipCode</stringProp>
                <stringProp name="Argument.value">95050</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="state">
                <stringProp name="Argument.name">state</stringProp>
                <stringProp name="Argument.value">CA</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="address">
                <stringProp name="Argument.name">address</stringProp>
                <stringProp name="Argument.value">123 tall ship st.</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="creditCardNumber">
                <stringProp name="Argument.name">creditCardNumber</stringProp>
                <stringProp name="Argument.value">1234123412341234</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="nameOnCard">
                <stringProp name="Argument.name">nameOnCard</stringProp>
                <stringProp name="Argument.value">captain herp a derp</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp elementType="HTTPArgument" name="cardType">
                <stringProp name="Argument.name">cardType</stringProp>
                <stringProp name="Argument.value">visa</stringProp>
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.domain">www.blazedemo.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.path">/confirmation.php</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert has [&quot;Thank you for your purchase today!&quot;]">
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <stringProp name="Assertion.test_type">2</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <collectionProp name="Asserion.test_strings">
              <stringProp name="">Thank you for your purchase today!</stringProp>
            </collectionProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
